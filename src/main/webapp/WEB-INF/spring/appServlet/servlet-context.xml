<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/*" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2"/> 
	</beans:bean>
	
	
	<!-- tiles3 -->
	
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver"> 
		<beans:property name="order" value="1"/> 
	</beans:bean> 
	
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer"> 
		<beans:property name="definitions"> 
			<beans:list> 
				<beans:value>/WEB-INF/tiles/**/tiles.xml</beans:value> 
			</beans:list> 
		</beans:property> 
	</beans:bean>

	
<!-- 	<context:component-scan base-package="com.spring.acorn.**" /> -->
	<context:component-scan base-package="com.iof.center.**" />
	
	<beans:bean id="login" class="com.iof.center.interceptor.LoginInterceptor" />
	    <interceptors>
        <interceptor>
            <mapping path = "/**" />
            <exclude-mapping path = "/user/**" />
            <exclude-mapping path = "/cell" />
            <exclude-mapping path = "/resources/**" />
            <exclude-mapping path = "/callback/**" />
            <exclude-mapping path = "/connect/**" />
            <exclude-mapping path = "/api/**" />
            <beans:ref bean="login" />
        </interceptor>
    </interceptors>
    
    <beans:bean id="LoginBO" class="com.iof.center.user.controller.NaverLoginBO" />

	<!-- google Class Bean설정 추가 -->
	<!-- 클라이언트ID와 보안비밀 세팅 -->
	<beans:bean id="googleConnectionFactory" 
		class="org.springframework.social.google.connect.GoogleConnectionFactory">
		<beans:constructor-arg value="177397433305-uibpmbv608g7hc2pnbhafjlkinmn8204.apps.googleusercontent.com" />
		<beans:constructor-arg value="ILMPS9r473pQOPweXDYnaxiM" />
	</beans:bean>
	<!-- 승인된 자바스크립트 원본과 승인된 리디렉션 URI -->
	<beans:bean id="googleOAuth2Parameters"	class="org.springframework.social.oauth2.OAuth2Parameters">
		<beans:property name="scope" value="https://www.googleapis.com/auth/userinfo.email" />
		<beans:property name="redirectUri"	value="http://localhost:8080/callback/google" />
	</beans:bean>

	<!-- application.properties 설정 --> 
	<context:property-placeholder location="classpath:/application.properties" /> 
	<beans:bean id="connectionFactoryLocator" class="org.springframework.social.connect.support.ConnectionFactoryRegistry">
		<beans:property name="connectionFactories">
			<beans:bean class="org.springframework.social.facebook.connect.FacebookConnectionFactory">
				<beans:constructor-arg value="${spring.social.facebook.appId}" /> 
				<beans:constructor-arg value="${spring.social.facebook.appSecret}" />
			</beans:bean> 
		</beans:property> 
	</beans:bean> 
	
	<beans:bean id="inMemoryConnectionRepository" class="org.springframework.social.connect.mem.InMemoryConnectionRepository"> 
		<beans:constructor-arg ref="connectionFactoryLocator" />
	</beans:bean>
</beans:beans>




